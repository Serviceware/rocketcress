trigger:
  branches:
    include:
    - '*'
  paths:
    include:
    - src
    - build

pool:
  vmImage: 'windows-2019'

steps:
- task: DotNetCoreCLI@2
  displayName: "\U0001F6E0 Build projects"
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '-c Release -p:TreatWarningsAsErrors=true'

- task: DotNetCoreCLI@2
  displayName: "\U0001F6E0 Build slim projects"
  inputs:
    command: 'build'
    projects: 'src/Rocketcress.Core/Rocketcress.Core.csproj'
    arguments: '-c Release-Slim -p:TreatWarningsAsErrors=true'

- task: DotNetCoreCLI@2
  displayName: "\U0001F4E6 Pack projects"
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj;!src/Test/*/*.csproj;src/Test/Test.*/*.csproj'
    configuration: 'Release'
    nobuild: true
    includesymbols: true
    versioningScheme: 'off'
    verbosityPack: 'Minimal'

- task: DotNetCoreCLI@2
  displayName: "\U0001F4E6 Pack slim projects"
  inputs:
    command: 'pack'
    packagesToPack: 'src/Rocketcress.Core/Rocketcress.Core.csproj'
    configuration: 'Release'
    nobuild: true
    includesymbols: true
    versioningScheme: 'off'
    verbosityPack: 'Minimal'

- task: PublishBuildArtifacts@1
  displayName: "\U0001F6EB Publish packages to Azure Pipeline"
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- script: dotnet nuget push --api-key $(NUGETAPIKEY) --skip-duplicate --source https://api.nuget.org/v3/index.json *.nupkg
  displayName: "\U0001F680 Publish packages to nuget.org"
  workingDirectory: $(Build.ArtifactStagingDirectory)
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))